{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiek\\\\Elim\\\\src\\\\features\\\\movies\\\\MoviePage\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { MovieBackdrop, MainInfo, MovieLongTitle, MovieRatingImg, MovieRatingText, MovieRating, MovieRatingNote, MovieRatingTextVote } from \"./styled\";\nimport star from \"../MovieTile/ratingStar.svg\";\nimport Wrapper from \"../../../common/Wrapper\";\nimport MovieDetailsTile from \"./MovieDetailsTile\";\nimport PeopleContainer from \"../../people/PeopleContainer\";\nimport Header from \"../../../common/Header\";\nimport Loader from \"../../../common/Loader\";\nimport Error from \"../../../common/Error/index\";\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\nimport { cast, crew, votes } from \"../../../common/languages\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getMovieCredits, getMovieDetails } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const language = useSelector(selectLanguage);\n  const {\n    data: movie,\n    isLoading: isMovieLoading,\n    isError: isMovieError\n  } = useQuery([\"movie\", {\n    id,\n    language\n  }], getMovieDetails);\n  const {\n    data: credits,\n    isLoading: isCreditsLoading,\n    isError: isCreditsError\n  } = useQuery([\"credits\", {\n    id,\n    language\n  }], getMovieCredits);\n  if (isMovieLoading || isCreditsLoading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  if (isMovieError || isCreditsError) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [movie.backdrop_path && /*#__PURE__*/_jsxDEV(MovieBackdrop, {\n      src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n      children: /*#__PURE__*/_jsxDEV(MainInfo, {\n        children: [/*#__PURE__*/_jsxDEV(MovieLongTitle, {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MovieRating, {\n          children: [/*#__PURE__*/_jsxDEV(MovieRatingImg, {\n            src: star\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieRatingNote, {\n            children: movie.vote_average.toFixed(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieRatingText, {\n            children: \"/ 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieRatingTextVote, {\n            children: [movie.vote_count, \" \", votes[language]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MovieDetailsTile, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: cast[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PeopleContainer, {\n        people: credits.cast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: crew[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PeopleContainer, {\n        people: credits.crew\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MoviePage, \"quJLNYtAVcX5i4U5gCBQlpbxWoM=\", false, function () {\n  return [useParams, useSelector, useQuery, useQuery];\n});\n_c = MoviePage;\nexport default MoviePage;\nvar _c;\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"names":["useSelector","useParams","MovieBackdrop","MainInfo","MovieLongTitle","MovieRatingImg","MovieRatingText","MovieRating","MovieRatingNote","MovieRatingTextVote","star","Wrapper","MovieDetailsTile","PeopleContainer","Header","Loader","Error","selectLanguage","cast","crew","votes","useQuery","getMovieCredits","getMovieDetails","MoviePage","id","language","data","movie","isLoading","isMovieLoading","isError","isMovieError","credits","isCreditsLoading","isCreditsError","backdrop_path","title","vote_average","toFixed","vote_count"],"sources":["C:/Users/chiek/Elim/src/features/movies/MoviePage/index.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  MovieBackdrop,\r\n  MainInfo,\r\n  MovieLongTitle,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRating,\r\n  MovieRatingNote,\r\n  MovieRatingTextVote,\r\n} from \"./styled\";\r\nimport star from \"../MovieTile/ratingStar.svg\";\r\nimport Wrapper from \"../../../common/Wrapper\";\r\nimport MovieDetailsTile from \"./MovieDetailsTile\";\r\nimport PeopleContainer from \"../../people/PeopleContainer\";\r\nimport Header from \"../../../common/Header\";\r\nimport Loader from \"../../../common/Loader\";\r\nimport Error from \"../../../common/Error/index\";\r\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\r\nimport { cast, crew, votes } from \"../../../common/languages\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getMovieCredits, getMovieDetails } from \"../api\";\r\n\r\nconst MoviePage = () => {\r\n  const { id } = useParams();\r\n  const language = useSelector(selectLanguage);\r\n\r\n  const {\r\n    data: movie,\r\n    isLoading: isMovieLoading,\r\n    isError: isMovieError,\r\n  } = useQuery([\"movie\", { id, language }], getMovieDetails);\r\n\r\n  const {\r\n    data: credits,\r\n    isLoading: isCreditsLoading,\r\n    isError: isCreditsError,\r\n  } = useQuery([\"credits\", { id, language }], getMovieCredits);\r\n\r\n  if (isMovieLoading || isCreditsLoading) {\r\n    return (\r\n      <Wrapper>\r\n        <Loader></Loader>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  if (isMovieError || isCreditsError) {\r\n    return (\r\n      <Wrapper>\r\n        <Error />\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {movie.backdrop_path && (\r\n        <MovieBackdrop\r\n          src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\r\n        >\r\n          <MainInfo>\r\n            <MovieLongTitle>{movie.title}</MovieLongTitle>\r\n            <MovieRating>\r\n              <MovieRatingImg src={star}></MovieRatingImg>\r\n              <MovieRatingNote>{movie.vote_average.toFixed(1)}</MovieRatingNote>\r\n              <MovieRatingText>/ 10</MovieRatingText>\r\n              <MovieRatingTextVote>\r\n                {movie.vote_count} {votes[language]}\r\n              </MovieRatingTextVote>\r\n            </MovieRating>\r\n          </MainInfo>\r\n        </MovieBackdrop>\r\n      )}\r\n      <Wrapper>\r\n        <MovieDetailsTile movie={movie} />\r\n        <Header>{cast[language]}</Header>\r\n        <PeopleContainer people={credits.cast} />\r\n        <Header>{crew[language]}</Header>\r\n        <PeopleContainer people={credits.crew} />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nexport default MoviePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}