{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiek\\\\Elim\\\\src\\\\features\\\\foods\\\\FoodTile\\\\useGenres.js\",\n  _s = $RefreshSig$();\nimport { MovieTileTag } from \"./styled\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getGenres } from \"../api\";\nimport { useSelector } from \"react-redux\";\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getGenreName = (genreId, genres) => {\n  const genre = genres.find(genre => genreId === genre.id ? genre.name : null);\n  return genre.name;\n};\nconst generateTags = (tagIds, genres) => {\n  if (tagIds && genres) {\n    const tags = tagIds.map(tagId => getGenreName(tagId, genres));\n    return tags.map((tag, index) => /*#__PURE__*/_jsxDEV(MovieTileTag, {\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this));\n  }\n};\nexport const useGenres = tagIds => {\n  _s();\n  const language = useSelector(selectLanguage);\n  const {\n    data: genres\n  } = useQuery([\"genres\", {\n    language\n  }], getGenres);\n  return generateTags(tagIds, genres);\n};\n_s(useGenres, \"nhivn5fLnfaoU0zqHXuvtP/wa64=\", false, function () {\n  return [useSelector, useQuery];\n});","map":{"version":3,"names":["MovieTileTag","useQuery","getGenres","useSelector","selectLanguage","getGenreName","genreId","genres","genre","find","id","name","generateTags","tagIds","tags","map","tagId","tag","index","useGenres","language","data"],"sources":["C:/Users/chiek/Elim/src/features/foods/FoodTile/useGenres.js"],"sourcesContent":["import { MovieTileTag } from \"./styled\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getGenres } from \"../api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\r\n\r\nconst getGenreName = (genreId, genres) => {\r\n  const genre = genres.find((genre) =>\r\n    genreId === genre.id ? genre.name : null\r\n  );\r\n  return genre.name;\r\n};\r\n\r\nconst generateTags = (tagIds, genres) => {\r\n  if (tagIds && genres) {\r\n    const tags = tagIds.map((tagId) => getGenreName(tagId, genres));\r\n    return tags.map((tag, index) => (\r\n      <MovieTileTag key={index}>{tag}</MovieTileTag>\r\n    ));\r\n  }\r\n};\r\n\r\nexport const useGenres = (tagIds) => {\r\n  const language = useSelector(selectLanguage);\r\n\r\n  const { data: genres } = useQuery([\"genres\", { language }], getGenres);\r\n\r\n  return generateTags(tagIds, genres);\r\n};\r\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,cAAc,QAAQ,yDAAyD;AAAC;AAEzF,MAAMC,YAAY,GAAG,CAACC,OAAO,EAAEC,MAAM,KAAK;EACxC,MAAMC,KAAK,GAAGD,MAAM,CAACE,IAAI,CAAED,KAAK,IAC9BF,OAAO,KAAKE,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACG,IAAI,GAAG,IAAI,CACzC;EACD,OAAOH,KAAK,CAACG,IAAI;AACnB,CAAC;AAED,MAAMC,YAAY,GAAG,CAACC,MAAM,EAAEN,MAAM,KAAK;EACvC,IAAIM,MAAM,IAAIN,MAAM,EAAE;IACpB,MAAMO,IAAI,GAAGD,MAAM,CAACE,GAAG,CAAEC,KAAK,IAAKX,YAAY,CAACW,KAAK,EAAET,MAAM,CAAC,CAAC;IAC/D,OAAOO,IAAI,CAACC,GAAG,CAAC,CAACE,GAAG,EAAEC,KAAK,kBACzB,QAAC,YAAY;MAAA,UAAcD;IAAG,GAAXC,KAAK;MAAA;MAAA;MAAA;IAAA,QACzB,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAIN,MAAM,IAAK;EAAA;EACnC,MAAMO,QAAQ,GAAGjB,WAAW,CAACC,cAAc,CAAC;EAE5C,MAAM;IAAEiB,IAAI,EAAEd;EAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,QAAQ,EAAE;IAAEmB;EAAS,CAAC,CAAC,EAAElB,SAAS,CAAC;EAEtE,OAAOU,YAAY,CAACC,MAAM,EAAEN,MAAM,CAAC;AACrC,CAAC;AAAC,GANWY,SAAS;EAAA,QACHhB,WAAW,EAEHF,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}