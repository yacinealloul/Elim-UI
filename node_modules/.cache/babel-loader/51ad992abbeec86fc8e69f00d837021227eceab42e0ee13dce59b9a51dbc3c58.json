{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiek\\\\Elim\\\\src\\\\features\\\\foods\\\\MoviesPage\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { MoviesContainer } from \"../MoviesContainer\";\nimport Wrapper from \"../../../common/Wrapper/index\";\nimport Header from \"../../../common/Header\";\nimport { Pager } from \"../../../common/Pager\";\nimport { useQueryParameter } from \"../../search/queryParameters\";\nimport Loader from \"../../../common/Loader\";\nimport NoResults from \"../../../common/NoResults\";\nimport searchQueryParamName from \"../../searchQueryParamName\";\nimport pageQueryParamName from \"../../pageQueryParamName\";\nimport Error from \"../../../common/Error/index\";\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\nimport { noResults, popularMovies, searchingFor, searchResultsFor } from \"../../../common/languages\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { getMovies } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoviesPage = () => {\n  _s();\n  const query = useQueryParameter(searchQueryParamName);\n  const currentPage = useQueryParameter(pageQueryParamName);\n  const language = useSelector(selectLanguage);\n  const {\n    data,\n    isLoading,\n    isError\n  } = useQuery([\"movies\", {\n    page: +currentPage,\n    query,\n    language\n  }], getMovies);\n  const {\n    results: foods,\n    total_results: totalNumberOfMovies,\n    total_pages: totalPages\n  } = data || {};\n  const queryClient = useQueryClient();\n  useEffect(() => {\n    if (+currentPage + 1 < totalPages) queryClient.prefetchQuery([\"movies\", {\n      page: +currentPage + 1,\n      query,\n      language\n    }], getMovies);\n  }, [currentPage, query, language, queryClient, totalPages]);\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: !isLoading ? foods.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: query ? `${searchResultsFor[language]} \"${query}\" (${totalNumberOfMovies})` : popularMovies[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MoviesContainer, {\n        foods: foods\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pager, {\n        allPages: totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [noResults[language], \" \", /*#__PURE__*/_jsxDEV(\"q\", {\n          children: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: query ? `${searchingFor[language]} \"${query}\"` : popularMovies[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviesPage, \"wHgCpt+Z79OG435ZUnA6xtY0lbI=\", false, function () {\n  return [useQueryParameter, useQueryParameter, useSelector, useQuery, useQueryClient];\n});\n_c = MoviesPage;\nexport default MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["React","useEffect","useSelector","MoviesContainer","Wrapper","Header","Pager","useQueryParameter","Loader","NoResults","searchQueryParamName","pageQueryParamName","Error","selectLanguage","noResults","popularMovies","searchingFor","searchResultsFor","useQuery","useQueryClient","getMovies","MoviesPage","query","currentPage","language","data","isLoading","isError","page","results","foods","total_results","totalNumberOfMovies","total_pages","totalPages","queryClient","prefetchQuery","id"],"sources":["C:/Users/chiek/Elim/src/features/foods/MoviesPage/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MoviesContainer } from \"../MoviesContainer\";\r\nimport Wrapper from \"../../../common/Wrapper/index\";\r\nimport Header from \"../../../common/Header\";\r\nimport { Pager } from \"../../../common/Pager\";\r\nimport { useQueryParameter } from \"../../search/queryParameters\";\r\nimport Loader from \"../../../common/Loader\";\r\nimport NoResults from \"../../../common/NoResults\";\r\nimport searchQueryParamName from \"../../searchQueryParamName\";\r\nimport pageQueryParamName from \"../../pageQueryParamName\";\r\nimport Error from \"../../../common/Error/index\";\r\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\r\nimport {\r\n  noResults,\r\n  popularMovies,\r\n  searchingFor,\r\n  searchResultsFor,\r\n} from \"../../../common/languages\";\r\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { getMovies } from \"../api\";\r\n\r\nconst MoviesPage = () => {\r\n  const query = useQueryParameter(searchQueryParamName);\r\n  const currentPage = useQueryParameter(pageQueryParamName);\r\n  const language = useSelector(selectLanguage);\r\n\r\n  const { data, isLoading, isError } = useQuery(\r\n    [\"movies\", { page: +currentPage, query, language }],\r\n    getMovies\r\n  );\r\n\r\n  const {\r\n    results: foods,\r\n    total_results: totalNumberOfMovies,\r\n    total_pages: totalPages,\r\n  } = data || {};\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    if (+currentPage + 1 < totalPages)\r\n      queryClient.prefetchQuery(\r\n        [\"movies\", { page: +currentPage + 1, query, language }],\r\n        getMovies\r\n      );\r\n  }, [currentPage, query, language, queryClient, totalPages]);\r\n\r\n  if (isError) {\r\n    return (\r\n      <Wrapper>\r\n        <Error />\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {!isLoading ? (\r\n        foods.id ? (\r\n          <>\r\n            <Header>\r\n              {query\r\n                ? `${searchResultsFor[language]} \"${query}\" (${totalNumberOfMovies})`\r\n                : popularMovies[language]}\r\n            </Header>\r\n            <MoviesContainer foods={foods} />\r\n            <Pager allPages={totalPages} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Header>\r\n              {noResults[language]} <q>{query}</q>\r\n            </Header>\r\n            <NoResults />\r\n          </>\r\n        )\r\n      ) : (\r\n        <>\r\n          <Header>\r\n            {query\r\n              ? `${searchingFor[language]} \"${query}\"`\r\n              : popularMovies[language]}\r\n          </Header>\r\n          <Loader />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}