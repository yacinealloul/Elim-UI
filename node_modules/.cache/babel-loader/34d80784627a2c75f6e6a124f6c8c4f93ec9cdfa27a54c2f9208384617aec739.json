{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiek\\\\Elim\\\\src\\\\features\\\\movies\\\\MovieTile\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport star from \"./ratingStar.svg\";\nimport Tile from \"../../../common/Tile\";\nimport Poster from \"../../../images/Poster.svg\";\nimport { MovieTileImg, MovieTileHeader, MovieTileYear, MovieTileTags, MovieAdditionalInfo, MovieRatingImg, MovieRatingText, MovieRatingVotes, MovieInfoWrapper } from \"./styled\";\nimport { Link } from \"react-router-dom\";\nimport { toFood } from \"../../../routes\";\nimport { votes } from \"../../../common/languages\";\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useGenres } from \"./useGenres\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieTile = _ref => {\n  _s();\n  let {\n    food\n  } = _ref;\n  const language = useSelector(selectLanguage);\n  const generatedTags = useGenres(movie.genre_ids);\n  return /*#__PURE__*/_jsxDEV(Tile, {\n    as: Link,\n    to: toFood({\n      id: food.id\n    }),\n    children: [/*#__PURE__*/_jsxDEV(MovieTileImg, {\n      url: Poster\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfoWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MovieTileHeader, {\n        children: food.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieTileYear, {\n        children: food.character ? `${food.character} (${food.release_date ? food.release_date.slice(0, 4) : \"????\"})` : food.job ? `${food.job} (${food.release_date ? food.release_date.slice(0, 4) : \"????\"})` : food.release_date ? food.release_date.slice(0, 4) : \"????\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieTileTags, {\n        children: generatedTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieAdditionalInfo, {\n        children: [/*#__PURE__*/_jsxDEV(MovieRatingImg, {\n          src: star\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MovieRatingText, {\n          children: food.vote_average.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MovieRatingVotes, {\n          children: [food.vote_count, \" \", votes[language]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieTile, \"tGwsSdTLIdMpQvzjjp0S+XJdN+s=\", false, function () {\n  return [useSelector, useGenres];\n});\n_c = MovieTile;\nexport default MovieTile;\nvar _c;\n$RefreshReg$(_c, \"MovieTile\");","map":{"version":3,"names":["React","star","Tile","Poster","MovieTileImg","MovieTileHeader","MovieTileYear","MovieTileTags","MovieAdditionalInfo","MovieRatingImg","MovieRatingText","MovieRatingVotes","MovieInfoWrapper","Link","toFood","votes","selectLanguage","useSelector","useGenres","MovieTile","food","language","generatedTags","movie","genre_ids","id","title","character","release_date","slice","job","vote_average","toFixed","vote_count"],"sources":["C:/Users/chiek/Elim/src/features/movies/MovieTile/index.js"],"sourcesContent":["import React from \"react\";\r\nimport star from \"./ratingStar.svg\";\r\nimport Tile from \"../../../common/Tile\";\r\nimport Poster from \"../../../images/Poster.svg\";\r\nimport {\r\n  MovieTileImg,\r\n  MovieTileHeader,\r\n  MovieTileYear,\r\n  MovieTileTags,\r\n  MovieAdditionalInfo,\r\n  MovieRatingImg,\r\n  MovieRatingText,\r\n  MovieRatingVotes,\r\n  MovieInfoWrapper,\r\n} from \"./styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toFood } from \"../../../routes\";\r\nimport { votes } from \"../../../common/languages\";\r\nimport { selectLanguage } from \"../../../common/Navigation/LanguageSelect/languageSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useGenres } from \"./useGenres\";\r\n\r\nconst MovieTile = ({ food }) => {\r\n  const language = useSelector(selectLanguage);\r\n  const generatedTags = useGenres(movie.genre_ids);\r\n\r\n  return (\r\n    <Tile as={Link} to={toFood({ id: food.id })}>\r\n      <MovieTileImg\r\n        url={\r\n          Poster\r\n        }\r\n      />\r\n      <MovieInfoWrapper>\r\n        <MovieTileHeader>{food.title}</MovieTileHeader>\r\n        <MovieTileYear>\r\n          {food.character\r\n            ? `${food.character} (${\r\n                food.release_date ? food.release_date.slice(0, 4) : \"????\"\r\n              })`\r\n            : food.job\r\n            ? `${food.job} (${\r\n                food.release_date ? food.release_date.slice(0, 4) : \"????\"\r\n              })`\r\n            : food.release_date\r\n            ? food.release_date.slice(0, 4)\r\n            : \"????\"}\r\n        </MovieTileYear>\r\n        <MovieTileTags>{generatedTags}</MovieTileTags>\r\n        <MovieAdditionalInfo>\r\n          <MovieRatingImg src={star}></MovieRatingImg>\r\n          <MovieRatingText>{food.vote_average.toFixed(1)}</MovieRatingText>\r\n          <MovieRatingVotes>\r\n            {food.vote_count} {votes[language]}\r\n          </MovieRatingVotes>\r\n        </MovieAdditionalInfo>\r\n      </MovieInfoWrapper>\r\n    </Tile>\r\n  );\r\n};\r\n\r\nexport default MovieTile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SACEC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,aAAa,EACbC,mBAAmB,EACnBC,cAAc,EACdC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,QACX,UAAU;AACjB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,KAAK,QAAQ,2BAA2B;AACjD,SAASC,cAAc,QAAQ,yDAAyD;AACxF,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,aAAa;AAAC;AAExC,MAAMC,SAAS,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACzB,MAAMC,QAAQ,GAAGJ,WAAW,CAACD,cAAc,CAAC;EAC5C,MAAMM,aAAa,GAAGJ,SAAS,CAACK,KAAK,CAACC,SAAS,CAAC;EAEhD,oBACE,QAAC,IAAI;IAAC,EAAE,EAAEX,IAAK;IAAC,EAAE,EAAEC,MAAM,CAAC;MAAEW,EAAE,EAAEL,IAAI,CAACK;IAAG,CAAC,CAAE;IAAA,wBAC1C,QAAC,YAAY;MACX,GAAG,EACDtB;IACD;MAAA;MAAA;MAAA;IAAA,QACD,eACF,QAAC,gBAAgB;MAAA,wBACf,QAAC,eAAe;QAAA,UAAEiB,IAAI,CAACM;MAAK;QAAA;QAAA;QAAA;MAAA,QAAmB,eAC/C,QAAC,aAAa;QAAA,UACXN,IAAI,CAACO,SAAS,GACV,GAAEP,IAAI,CAACO,SAAU,KAChBP,IAAI,CAACQ,YAAY,GAAGR,IAAI,CAACQ,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MACrD,GAAE,GACHT,IAAI,CAACU,GAAG,GACP,GAAEV,IAAI,CAACU,GAAI,KACVV,IAAI,CAACQ,YAAY,GAAGR,IAAI,CAACQ,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MACrD,GAAE,GACHT,IAAI,CAACQ,YAAY,GACjBR,IAAI,CAACQ,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAC7B;MAAM;QAAA;QAAA;QAAA;MAAA,QACI,eAChB,QAAC,aAAa;QAAA,UAAEP;MAAa;QAAA;QAAA;QAAA;MAAA,QAAiB,eAC9C,QAAC,mBAAmB;QAAA,wBAClB,QAAC,cAAc;UAAC,GAAG,EAAErB;QAAK;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC5C,QAAC,eAAe;UAAA,UAAEmB,IAAI,CAACW,YAAY,CAACC,OAAO,CAAC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAmB,eACjE,QAAC,gBAAgB;UAAA,WACdZ,IAAI,CAACa,UAAU,EAAC,GAAC,EAAClB,KAAK,CAACM,QAAQ,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACjB;MAAA;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACd;AAEX,CAAC;AAAC,GArCIF,SAAS;EAAA,QACIF,WAAW,EACNC,SAAS;AAAA;AAAA,KAF3BC,SAAS;AAuCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}