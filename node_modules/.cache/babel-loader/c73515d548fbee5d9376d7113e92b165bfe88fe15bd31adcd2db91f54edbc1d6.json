{"ast":null,"code":"import { apiKey, apiUrl } from \"../../common/api\";\nexport const getMovies = async _ref => {\n  let {\n    queryKey\n  } = _ref;\n  const [, {\n    page,\n    query,\n    language\n  }] = queryKey;\n  {/* const params = new URLSearchParams({\r\n    language,\r\n    page: page || 1,\r\n    ...(query && { query }),\r\n   }); */}\n  const url = `${apiUrl}${query ? \"search/movie\" : \"/fruits\"}`;\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n};\nexport const getGenres = async _ref2 => {\n  let {\n    queryKey\n  } = _ref2;\n  const [, {\n    language\n  }] = queryKey;\n  const response = await fetch(`${apiUrl}genre/movie/list?api_key=${apiKey}&language=${language}`);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  const data = await response.json();\n  return data.genres;\n};\nexport const getMovieDetails = async _ref3 => {\n  let {\n    queryKey\n  } = _ref3;\n  const [, {\n    id,\n    language\n  }] = queryKey;\n  const response = await fetch(`${apiUrl}movie/${id}?api_key=${apiKey}&language=${language}`);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n};\nexport const getMovieCredits = async _ref4 => {\n  let {\n    queryKey\n  } = _ref4;\n  const [, {\n    id,\n    language\n  }] = queryKey;\n  const response = await fetch(`${apiUrl}movie/${id}/credits?api_key=${apiKey}&language=${language}`);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n  return await response.json();\n};","map":{"version":3,"names":["apiKey","apiUrl","getMovies","queryKey","page","query","language","url","response","fetch","ok","Error","statusText","json","getGenres","data","genres","getMovieDetails","id","getMovieCredits"],"sources":["C:/Users/chiek/Elim/src/features/foods/api.js"],"sourcesContent":["import { apiKey, apiUrl } from \"../../common/api\";\r\n\r\nexport const getMovies = async ({ queryKey }) => {\r\n  const [, { page, query, language }] = queryKey;\r\n\r\n  {/* const params = new URLSearchParams({\r\n    language,\r\n    page: page || 1,\r\n    ...(query && { query }),\r\n  }); */}\r\n\r\n  const url = `${apiUrl}${\r\n    query ? \"search/movie\" : \"/fruits\"\r\n  }`;\r\n\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getGenres = async ({ queryKey }) => {\r\n  const [, { language }] = queryKey;\r\n\r\n  const response = await fetch(\r\n    `${apiUrl}genre/movie/list?api_key=${apiKey}&language=${language}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  return data.genres;\r\n};\r\n\r\nexport const getMovieDetails = async ({ queryKey }) => {\r\n  const [, { id, language }] = queryKey;\r\n\r\n  const response = await fetch(\r\n    `${apiUrl}movie/${id}?api_key=${apiKey}&language=${language}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport const getMovieCredits = async ({ queryKey }) => {\r\n  const [, { id, language }] = queryKey;\r\n\r\n  const response = await fetch(\r\n    `${apiUrl}movie/${id}/credits?api_key=${apiKey}&language=${language}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText);\r\n  }\r\n\r\n  return await response.json();\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAG,cAAwB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC1C,MAAM,GAAG;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC,GAAGH,QAAQ;EAE9C,CAAC;AACH;AACA;AACA;AACA,SAJG;EAMD,MAAMI,GAAG,GAAI,GAAEN,MAAO,GACpBI,KAAK,GAAG,cAAc,GAAG,SAC1B,EAAC;EAEF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EAEjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,UAAU,CAAC;EACtC;EAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,EAAE;AAC9B,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,eAAwB;EAAA,IAAjB;IAAEX;EAAS,CAAC;EAC1C,MAAM,GAAG;IAAEG;EAAS,CAAC,CAAC,GAAGH,QAAQ;EAEjC,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAER,MAAO,4BAA2BD,MAAO,aAAYM,QAAS,EAAC,CACnE;EAED,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,UAAU,CAAC;EACtC;EAEA,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACK,IAAI,EAAE;EAElC,OAAOE,IAAI,CAACC,MAAM;AACpB,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,eAAwB;EAAA,IAAjB;IAAEd;EAAS,CAAC;EAChD,MAAM,GAAG;IAAEe,EAAE;IAAEZ;EAAS,CAAC,CAAC,GAAGH,QAAQ;EAErC,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAER,MAAO,SAAQiB,EAAG,YAAWlB,MAAO,aAAYM,QAAS,EAAC,CAC9D;EAED,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,UAAU,CAAC;EACtC;EAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,EAAE;AAC9B,CAAC;AAED,OAAO,MAAMM,eAAe,GAAG,eAAwB;EAAA,IAAjB;IAAEhB;EAAS,CAAC;EAChD,MAAM,GAAG;IAAEe,EAAE;IAAEZ;EAAS,CAAC,CAAC,GAAGH,QAAQ;EAErC,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAER,MAAO,SAAQiB,EAAG,oBAAmBlB,MAAO,aAAYM,QAAS,EAAC,CACtE;EAED,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,UAAU,CAAC;EACtC;EAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,EAAE;AAC9B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}